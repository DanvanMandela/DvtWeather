plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-android-extensions'
    id 'org.sonarqube'
    id 'jacoco'
    id 'dagger.hilt.android.plugin'
}

jacoco {
    toolVersion = "0.8.1"
}
task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest', 'createDebugCoverageReport']) {

    reports {
        xml.enabled = true
        html.enabled = true
    }

    def fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*', '**/*Test*.*', 'android/**/*.*']
    def debugTree = fileTree(dir: "$project.buildDir/intermediates/classes/debug", excludes: fileFilter)
    def mainSrc = "$project.projectDir/src/main/java"

    sourceDirectories.from = files([mainSrc])
    classDirectories.from = files([debugTree])
    executionData.from = fileTree(dir: project.buildDir, includes: [
            'jacoco/testDebugUnitTest.exec', 'outputs/code-coverage/connected/*coverage.ec'
    ])
}

tasks.withType(Test) {
    jacoco.includeNoLocationClasses = true
}


android {
    compileSdk 31

    defaultConfig {
        applicationId "com.example.dvtweather"
        minSdk 25
        targetSdk 31
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation":
                                     "$projectDir/schemas".toString()]
            }
        }

        multiDexEnabled true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
        dataBinding true
    }
    testOptions {
        unitTests.all {
            jacoco {
                includeNoLocationClasses = true
            }
        }
    }
    sonarqube {
        properties {
            property "sonar.sources", "src/main"
            property "sonar.projectName", "DvtWeather"
            property "sonar.projectVersion", "1.0"
            property "sonar.projectDescription", ""
        }
    }

    kapt {
        generateStubs = true
        correctErrorTypes true
        javacOptions {
            option("-Adagger.fastInit=ENABLED")
            option("-Adagger.hilt.android.internal.disableAndroidSuperclassValidation=true")
        }
    }

}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    implementation 'com.google.android.gms:play-services-maps:18.0.2'
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'com.google.android.gms:play-services-location:19.0.1'
    testImplementation 'junit:junit:'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    //***Work Manager***
    def work_version = "2.7.1"

    implementation "androidx.work:work-runtime:$work_version"
    implementation "androidx.work:work-runtime-ktx:$work_version"
    implementation "androidx.work:work-rxjava2:$work_version"
    implementation "androidx.work:work-gcm:$work_version"
    androidTestImplementation "androidx.work:work-testing:$work_version"
    implementation "androidx.work:work-multiprocess:$work_version"

    //***Room  Database***
    def room_version = "2.4.1"

    implementation("androidx.room:room-runtime:$room_version")
    annotationProcessor "androidx.room:room-compiler:$room_version"
    kapt("androidx.room:room-compiler:$room_version")
    implementation("androidx.room:room-ktx:$room_version")
    implementation "androidx.room:room-rxjava2:$room_version"
    implementation "androidx.room:room-rxjava3:$room_version"
    implementation "androidx.room:room-guava:$room_version"
    testImplementation("androidx.room:room-testing:$room_version")

    //***Android Architecture Components***
    def lifecycle_version = "2.4.0"

    implementation group: 'androidx.lifecycle', name: 'lifecycle-runtime-ktx', version: "$lifecycle_version"
    implementation group: 'androidx.lifecycle', name: 'lifecycle-viewmodel-ktx', version: "$lifecycle_version"
    implementation group: 'androidx.lifecycle', name: 'lifecycle-livedata-ktx', version: "$lifecycle_version"
    implementation group: 'androidx.lifecycle', name: 'lifecycle-runtime-ktx', version: "$lifecycle_version"
    implementation group: 'androidx.lifecycle', name: 'lifecycle-common', version: "$lifecycle_version"
    //noinspection KtxExtensionAvailable
    implementation group: 'androidx.lifecycle', name: 'lifecycle-reactivestreams', version: "$lifecycle_version"
    implementation group: 'androidx.lifecycle', name: 'lifecycle-reactivestreams-ktx', version: "$lifecycle_version"

    //**Navigation Graph***
    def nav_version = "2.5.0-alpha01"


    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"
    implementation "androidx.navigation:navigation-dynamic-features-fragment:$nav_version"
    androidTestImplementation "androidx.navigation:navigation-testing:$nav_version"
    implementation "androidx.navigation:navigation-compose:$nav_version"


    //***Retrofit2***
    def retrofit_version = '2.9.0'

    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit_version"
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'


    //***okhttp3**
    def okhttp3_version = "5.0.0-alpha.2"

    implementation group: 'com.squareup.okhttp3', name: 'logging-interceptor', version: "$okhttp3_version"
    implementation group: 'com.squareup.okhttp3', name: 'okhttp-urlconnection', version: "$okhttp3_version"

    //***Google gson***
    def google_gson_version = "2.8.7"

    implementation group: 'com.google.code.gson', name: 'gson', version: "$google_gson_version"


    //***RxJava2 &  RxAndroid***
    def rxJava_version = "2.2.21"
    def rxAndroid_version = "2.1.1"

    implementation group: 'io.reactivex.rxjava2', name: 'rxjava', version: "$rxJava_version"
    implementation group: 'io.reactivex.rxjava2', name: 'rxandroid', version: "$rxAndroid_version"


    //***Dagger2***
    final DAGGER_VERSION = '2.40.5'

    implementation "com.google.dagger:dagger:$DAGGER_VERSION"
    implementation "com.google.dagger:dagger-android-support:$DAGGER_VERSION"
    annotationProcessor "com.google.dagger:dagger-compiler:$DAGGER_VERSION"
    annotationProcessor "com.google.dagger:dagger-android-processor:$DAGGER_VERSION"
    androidTestAnnotationProcessor "com.google.dagger:dagger-compiler:$DAGGER_VERSION"

    kapt 'com.google.dagger:dagger-compiler:2.40.5'
    kapt 'com.google.dagger:dagger-android-processor:2.40.5'

    //***Hilt ***

    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"
    kapt "androidx.hilt:hilt-compiler:1.0.0"
    implementation 'androidx.hilt:hilt-work:1.0.0'

    //***Hilt testing***
    androidTestImplementation "com.google.dagger:hilt-android-testing:$hilt_version"
    kaptAndroidTest "com.google.dagger:hilt-android-compiler:$hilt_version"

    //***Lottie Animation view**
    final LOTTIE_ANDROID_VERSION = '4.1.0'

    implementation "com.airbnb.android:lottie:$LOTTIE_ANDROID_VERSION"

    //***coroutines***
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.5.2'

    //***play-services-base***
    implementation group: 'com.google.android.gms', name: 'play-services-base', version: '18.0.1'

    //***Glide***
    implementation group: 'com.github.bumptech.glide', name: 'glide', version: '4.12.0'
    implementation group: 'com.github.bumptech.glide', name: 'annotations', version: '4.12.0'

    //***Pretty Time**
    implementation group: 'org.ocpsoft.prettytime', name: 'prettytime', version: '5.0.1.Final'

    //***JodaTime***
    implementation group: 'joda-time', name: 'joda-time', version: '2.10.10'

    //***JavaX & xerces***
    implementation 'javax.xml.bind:jaxb-api:2.4.0-b180830.0359'
    implementation group: 'xerces', name: 'xercesImpl', version: '2.12.1'

    implementation 'de.hdodenhof:circleimageview:3.1.0'

    //dexter permissions
    implementation 'com.karumi:dexter:6.2.3'

    //**Image cropper
    implementation 'com.github.yalantis:ucrop:2.2.6-native'
    implementation 'net.yslibrary.keyboardvisibilityevent:keyboardvisibilityevent:3.0.0-RC3'


    //** Mockito
    def mockito_version = "4.3.1"

    testImplementation("org.mockito:mockito-core:$mockito_version")

}